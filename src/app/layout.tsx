import type { Metadata, Viewport } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import prisma from "../../lib/prisma";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: {
    default: 'Cinema Center',
    template: "%s | Cinema Center "
  },
  description: "Generated by create next app",
  themeColor: '#111010'
};
export const viewport: Viewport = {
  initialScale: 1,
  width: 'device-width',
  viewportFit: 'cover'
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {


  const [allData] = await prisma.$transaction([
    prisma.mediaContent.findMany({
      include: {
        genre: true,
        category: true,
        downloadLink: true,
        language: true,
      },
    })
  ])
  return (
    <html lang="en">
      <head>
        {/* Customize the status bar color for Safari on iOS */}
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="#111010" />
      </head>
      <link rel="icon" type="image/png" href="/favicon-48x48.png" sizes="48x48" />
      <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
      <link rel="shortcut icon" href="/favicon.ico" />
      <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
      <link rel="manifest" href="/site.webmanifest" />
      <body
        className={`${geistSans.variable} ${geistMono.variable} bg-[#111010] min-h-screen pt-[env(safe-area-inset-top)] antialiased`}
      >
        <div className="max-w-screen  overflow-hidden">
          <Header allData={allData} />

          {children}
          <Footer />

        </div>
      </body>
    </html>
  );
}
